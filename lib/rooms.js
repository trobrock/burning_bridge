// Generated by CoffeeScript 1.7.1
(function() {
  var Campfire, EventEmitter, Rooms, configuration, fs;

  fs = require("fs");

  Campfire = require("campfire").Campfire;

  EventEmitter = require("events").EventEmitter;

  configuration = JSON.parse(fs.readFileSync("./config/config.json").toString());

  Rooms = (function() {
    Rooms.prototype.campfire = new Campfire({
      ssl: true,
      token: configuration.token,
      account: configuration.subdomain
    });

    Rooms.prototype.rooms = [];

    function Rooms() {
      this.events = new EventEmitter();
      this._sync();
    }

    Rooms.prototype.on = function() {
      return this.events.on.apply(this.events, arguments);
    };

    Rooms.prototype._sync = function() {
      return this.campfire.rooms((function(_this) {
        return function(err, all_rooms) {
          var room, _i, _len, _results;
          _results = [];
          for (_i = 0, _len = all_rooms.length; _i < _len; _i++) {
            room = all_rooms[_i];
            _results.push(_this.campfire.room(room.id, function(err, r) {
              var channel;
              _this.rooms.push(r);
              channel = "#" + (r.name.toLowerCase().replace(" ", "_"));
              return r.listen(function(message) {
                return _this.events.emit("message:" + channel, message);
              });
            }));
          }
          return _results;
        };
      })(this));
    };

    return Rooms;

  })();

  exports.Rooms = Rooms;

}).call(this);
